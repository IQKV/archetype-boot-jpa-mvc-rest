kind : pipeline
name : CodeVerification
type : docker

trigger :
  event :
    - push
    - tag

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :

  - name : code-coverage-gate
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn -version
      - mvn dependency:resolve -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn clean verify -Dstyle.color=always -Dmaven.javadoc.skip=true -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD

  - name : static-analysis-gate
    depends_on :
      - code-coverage-gate
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
      SONAR_HOST :
        from_secret : SONAR_HOST
      SONAR_TOKEN :
        from_secret : SONAR_TOKEN
    commands :
      - mvn org.apache.maven.plugins:maven-dependency-plugin:3.5.0:copy-dependencies -Dmdep.prependGroupId=true -Dstyle.color=always -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn sonar:sonar '-Dsonar.java.libraries=target/dependency/*.jar' '-Dsonar.java.test.libraries=target/classes,target/dependency/*.jar' -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=300 -Dsonar.host.url=${symbol_dollar}SONAR_HOST -Dsonar.login=${symbol_dollar}SONAR_TOKEN -Dsonar.projectKey=${symbol_dollar}{DRONE_REPO_OWNER}:${symbol_dollar}{DRONE_REPO_NAME} -Dsonar.projectName=${symbol_dollar}{DRONE_REPO_OWNER}:${symbol_dollar}{DRONE_REPO_NAME} -Dstyle.color=always -Dmaven.javadoc.skip=true --batch-mode -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn pmd:check --batch-mode -Dstyle.color=always -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.4:check -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD  -Dspotbugs.xmlOutput=true -Dspotbugs.failOnError=true -Dspotbugs.excludeFilterFile=../spotbugs-exclude.xml -Dspotbugs.includeTests=true -Dstyle.color=always

---

kind : pipeline
name : ArtifactsPublishing
type : docker

trigger :
  event :
    - push
    - tag
  ref :
    - refs/heads/develop
    - refs/heads/prerelease*
    - refs/heads/*.*.x
    - refs/tags/*

depends_on :
  - CodeVerification

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : publish-snapshot-jar
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -Dstyle.color=always -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD -DaltDeploymentRepository=kh-contrib-snapshots-repo::https://know-how.nexus/repository/maven-snapshots
    when :
      branch :
        include :
          - "develop"
          - "prerelease/*"
          - "*.*.x"

  - name : publish-release-jar
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -Dstyle.color=always -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD -DaltDeploymentRepository=kh-contrib-releases-repo::https://know-how.nexus/repository/maven-releases
    when :
      ref :
        - "refs/tags/*"

  - name : create-github-release
    image : plugins/github-release
    settings :
      api_key :
        from_secret : GITHUB_API_KEY
      title : ${DRONE_TAG}
      note : "**Full Changelog**: https://github.com/${symbol_dollar}{DRONE_REPO}/commits/${symbol_dollar}{DRONE_TAG}"
      files : ./target/*.jar
    when :
      ref :
        - "refs/tags/*"
    depends_on :
      - publish-release-jar

---

kind : pipeline
name : DockerImagePublishing
type : docker

trigger :
  event :
    - push
    - tag

depends_on :
  - ArtifactsPublishing

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : package-jar
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      MAVEN_OPTS : --add-opens java.base/java.lang=ALL-UNNAMED
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn package -Dstyle.color=always -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true --batch-mode -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD

  - name : build-container-with-feature
    depends_on :
      - package-jar
    image : plugins/docker
    settings :
      dockerfile : ./.drone/Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : know-how.store/${symbol_dollar}{DRONE_REPO_OWNER}/${symbol_dollar}{DRONE_REPO_NAME}
      registry : know-how.store
      force_tag : true
      build_args : BUILD_VERSION=${symbol_dollar}{DRONE_COMMIT}
      tags :
        - ${symbol_dollar}{DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-release-image
    depends_on :
      - package-jar
    image : plugins/docker
    settings :
      dockerfile : ./.drone/Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : know-how.store/${symbol_dollar}{DRONE_REPO_OWNER}/${symbol_dollar}{DRONE_REPO_NAME}
      registry : know-how.store
      force_tag : true
      build_args :
        - BASE_IMAGE=know-how.store/jre:ibm-semeru-runtimes-open-17-jre-focal
        - BUILD_VERSION=${symbol_dollar}{DRONE_COMMIT}
      tags :
        - ${symbol_dollar}{DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"

---

kind : pipeline
name : PromoteFeatureDeployment
type : docker
trigger :
  event :
    - promote
  target :
    - sit
  ref :
    - "refs/heads/feature/containerized-*"

steps :
  - name : deploy
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      HELM_CHARTS_REPOSITORY :
        from_secret : HELM_CHARTS_REPOSITORY
    commands :
      - git clone ${symbol_dollar}${symbol_dollar}{HELM_CHARTS_REPOSITORY} charts && cd charts
      - kubectl version --output=yaml
      - helm upgrade --install --atomic --wait --timeout 2m ${symbol_dollar}{DRONE_REPO_NAME} ./${symbol_dollar}{DRONE_REPO_NAME} --values ./${symbol_dollar}{DRONE_REPO_NAME}/${symbol_dollar}{DRONE_DEPLOY_TO}-values.yaml --set image.tag=${symbol_dollar}{DRONE_COMMIT} -n ${symbol_dollar}{DRONE_DEPLOY_TO}-env

---

kind : pipeline
name : RollbackFeatureDeployment
type : docker
trigger :
  event :
    - rollback
  target :
    - sit
  ref :
    - "refs/heads/feature/containerized-*"

steps :
  - name : rollback
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      HELM_CHARTS_REPOSITORY :
        from_secret : HELM_CHARTS_REPOSITORY
    commands :
      - git clone ${symbol_dollar}${symbol_dollar}{HELM_CHARTS_REPOSITORY} charts && cd charts
      - helm uninstall --wait --timeout 2m ${symbol_dollar}{DRONE_REPO_NAME} -n ${symbol_dollar}{DRONE_DEPLOY_TO}-env

---

kind : pipeline
name : PromoteDeployment
type : docker
trigger :
  event :
    - promote
  target :
    - uat
    - production
  ref :
    - "refs/tags/*"

steps :
  - name : deploy
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      HELM_CHARTS_REPOSITORY :
        from_secret : HELM_CHARTS_REPOSITORY
    commands :
      - git clone ${symbol_dollar}${symbol_dollar}{HELM_CHARTS_REPOSITORY} charts && cd charts
      - kubectl version --output=yaml
      - helm upgrade --install --atomic --wait --timeout 2m ${symbol_dollar}{DRONE_REPO_NAME} ./${symbol_dollar}{DRONE_REPO_NAME} --values ./${symbol_dollar}{DRONE_REPO_NAME}/${symbol_dollar}{DRONE_DEPLOY_TO}-values.yaml --set image.tag=${symbol_dollar}{DRONE_TAG} -n ${symbol_dollar}{DRONE_DEPLOY_TO}-env

---

kind : pipeline
name : RollbackDeployment
type : docker
trigger :
  event :
    - rollback
  target :
    - uat
    - production
  ref :
    - "refs/tags/*"

steps :
  - name : rollback
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    environment :
      HELM_CHARTS_REPOSITORY :
        from_secret : HELM_CHARTS_REPOSITORY
    commands :
      - git clone ${symbol_dollar}${symbol_dollar}{HELM_CHARTS_REPOSITORY} charts && cd charts
      - helm uninstall --wait --timeout 2m ${symbol_dollar}{DRONE_REPO_NAME} -n ${symbol_dollar}{DRONE_DEPLOY_TO}-env


---

kind : pipeline
name : ManualRelease
type : docker
trigger :
  event :
    - custom
  branch :
    - "develop"
    - "*.*.x"

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : create-release-tag
    failure : ignore
    image : know-how.store/svc-builder:ibm-semeru-runtimes-open-17-jdk-focal
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    commands :
      - echo Prepare new version ${symbol_dollar}{RELEASE_VERSION}
      - export NEXT_SNAPSHOT=${symbol_dollar}{SNAPSHOT_VERSION}-SNAPSHOT
      - export GIT_AUTHOR_NAME=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_USERNAME}
      - export GIT_AUTHOR_EMAIL=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_EMAIL}
      - export GIT_COMMITTER_NAME=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_USERNAME}
      - export GIT_COMMITTER_EMAIL=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_EMAIL}
      - git remote set-url --push origin ${symbol_dollar}{DRONE_GIT_SSH_URL}
      - git checkout -b v${symbol_dollar}{RELEASE_VERSION}
      - mvn versions:set -DremoveSnapshot
      - mvn versions:set -DnewVersion=${symbol_dollar}{RELEASE_VERSION}
      - mvn versions:update-parent
      - >-
        git commit -a -m "feat: bump version to ${symbol_dollar}${symbol_dollar}{RELEASE_VERSION}"
      - git tag ${symbol_dollar}{RELEASE_VERSION} && git push origin ${symbol_dollar}{RELEASE_VERSION}
      - echo "✅ Release tag ${symbol_dollar}{RELEASE_VERSION} was created."
      - sleep 10
      - git tag -d ${symbol_dollar}{RELEASE_VERSION} && git checkout ${symbol_dollar}{DRONE_COMMIT_BRANCH} && git branch -D v${symbol_dollar}{RELEASE_VERSION}
      - mvn versions:set -DnewVersion=${symbol_dollar}${symbol_dollar}{NEXT_SNAPSHOT}
      - mvn versions:update-parent -DallowSnapshots=true
      - >-
        git commit -a -m "feat: create new ${symbol_dollar}${symbol_dollar}{NEXT_SNAPSHOT}"
      - git push origin ${symbol_dollar}{DRONE_COMMIT_BRANCH}
      - echo "✅ Started ${symbol_dollar}${symbol_dollar}{NEXT_SNAPSHOT}."
      - echo "🚀 Good job, new version ${symbol_dollar}{RELEASE_VERSION} was released successfully."
