#set( $symbol_dollar = '$' )
kind : pipeline
name : CI
type : docker

trigger :
  event :
    - push
    - tag

volumes :
  - name : m2cache
    host :
      path : /app/.m2
steps :

  - name : build
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
      SONAR_HOST :
        from_secret : SONAR_HOST
      SONAR_TOKEN :
        from_secret : SONAR_TOKEN
    commands :
      - mvn clean compile test-compile -P default -B  --file pom.xml -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn pmd:check -P default -B --file pom.xml -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.0:check -P default -Dspotbugs.xmlOutput=true -Dspotbugs.failOnError=true -Dspotbugs.excludeFilterFile=../spotbugs-exclude.xml -Dspotbugs.includeTests=true  --file pom.xml -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
      - mvn org.jacoco:jacoco-maven-plugin:prepare-agent integration-test package org.jacoco:jacoco-maven-plugin:report sonar:sonar -P default -Dsonar.host.url=${symbol_dollar}SONAR_HOST -Dsonar.login=${symbol_dollar}SONAR_TOKEN -Dsonar.projectKey=${groupId}:${artifactId} -Dsonar.projectName=${groupId}:${artifactId} --batch-mode --file pom.xml -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD
    when :
      event :
        - push
        - tag

  - name : publish-snapshot-jar
    depends_on :
      - build
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -DskipTests=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD -DaltDeploymentRepository=ujar-snapshots-repository::default::https://nexus.c2a2.com/repository/maven-snapshots
    when :
      branch :
        include :
          - "feature/*"
          - "develop"
          - "*.*.x"

  - name : publish-release-jar
    depends_on :
      - build
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -DskipTests=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=${symbol_dollar}DEPLOYER_USERNAME -Ddeployer.password=${symbol_dollar}DEPLOYER_PASSWORD -DaltDeploymentRepository=ujar-releases-repository::default::https://nexus.c2a2.com/repository/maven-releases
    when :
      ref :
        - "refs/tags/*"

  - name : build-container-with-feature
    depends_on :
      - publish-snapshot-jar
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/${artifactId}
      registry : docker-registry.c2a2.com
      tags :
        - ${symbol_dollar}{DRONE_BRANCH:22}
    when :
      branch :
        include :
          - "feature/containerized-*"

  - name : build-container-release-image
    depends_on :
      - publish-release-jar
    image : plugins/docker
    settings :
      dockerfile : .drone/c2a2/Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/${artifactId}
      registry : docker-registry.c2a2.com
      tags :
        - ${symbol_dollar}{DRONE_TAG}
        - "latest"
    when :
      ref :
        - "refs/tags/*"


---

kind : pipeline
name : CreateReleaseManually
type : docker
trigger :
  event :
    - custom
  branch :
    - "develop"
    - "*.*.x"

volumes :
  - name : m2cache
    host :
      path : /app/.m2

steps :
  - name : create-release-tag
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    commands :
      - echo Prepare new version ${symbol_dollar}{TAG}
      - mkdir ${symbol_dollar}{TAG}
      - rmdir ${symbol_dollar}{TAG}
      - export NEXT_SNAPSHOT=${symbol_dollar}(increment_version -${symbol_dollar}{INCREMENT_TYPE} ${symbol_dollar}{TAG})-SNAPSHOT
      - export GIT_AUTHOR_NAME=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_USERNAME}
      - export GIT_AUTHOR_EMAIL=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_EMAIL}
      - export GIT_COMMITTER_NAME=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_USERNAME}
      - export GIT_COMMITTER_EMAIL=${symbol_dollar}${symbol_dollar}{SVC_BUILD_GIT_EMAIL}
      - git remote set-url --push origin ${symbol_dollar}{DRONE_GIT_SSH_URL}
      - git checkout -b v${symbol_dollar}{TAG}
      - mvn versions:set -DremoveSnapshot
      - mvn versions:set -DnewVersion=${symbol_dollar}{TAG}
      - mvn versions:update-parent
      - >-
        git commit -a -m "feat: bump version to ${symbol_dollar}${symbol_dollar}{TAG}"
      - git tag ${symbol_dollar}{TAG} && git push origin ${symbol_dollar}{TAG}
      - echo "âœ… Release tag ${symbol_dollar}{TAG} was created."
      - sleep 10
      - git tag -d ${symbol_dollar}{TAG} && git checkout ${symbol_dollar}{DRONE_COMMIT_BRANCH} && git branch -D v${symbol_dollar}{TAG}
      - mvn versions:set -DnewVersion=${symbol_dollar}${symbol_dollar}{NEXT_SNAPSHOT}
      - mvn versions:update-parent -DallowSnapshots=true
      - >-
        git commit -a -m "feat: create new ${symbol_dollar}${symbol_dollar}{NEXT_SNAPSHOT}"
      - git push origin ${symbol_dollar}{DRONE_COMMIT_BRANCH}
      - echo "âœ… Started ${symbol_dollar}${symbol_dollar}{NEXT_SNAPSHOT}."
      - echo "ðŸš€ Good job, new version ${symbol_dollar}{TAG} was released successfully."
